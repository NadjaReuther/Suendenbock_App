@{
        ViewData["Title"] = "Suendenbock - Mittelalterliche Charakterverwaltung";
}
@model HomeViewModel

@section Styles {
        <link href="/css/antique-home.css" rel="stylesheet" />
        <link href="https://fonts.googleapis.com/css2?family=MedievalSharp&family=Uncial+Antiqua&family=Cinzel:wght@400;600&display=swap" rel="stylesheet">
}
<!-- Header -->
<header class="antique-header">
    <h1 class="main-title">Sündenbock</h1>
</header>

<div class="main-container">
    <!-- Hero Pergament Karten mit echten Daten -->
    <section class="hero-section">
        <div class="pergament-card" data-tilt>
            <div class="card-corner top-left"></div>
            <div class="card-corner top-right"></div>
            <div class="card-corner bottom-left"></div>
            <div class="card-corner bottom-right"></div>

            <div class="card-number">@Model.Characters.Count</div>
            <h3 class="card-title">Charaktere</h3>
            <div class="card-content">
                Eingetragene Persönlichkeiten<br>
                aus allen Reichen und Ständen
            </div>
        </div>

        <div class="pergament-card" data-tilt>
            <div class="card-corner top-left"></div>
            <div class="card-corner top-right"></div>
            <div class="card-corner bottom-left"></div>
            <div class="card-corner bottom-right"></div>

            <div class="card-number">@Model.MagicClasses.Count</div>
            <h3 class="card-title">Magieklassen</h3>
            <div class="card-content">
                Verschiedene Schulen<br>
                der arkanen Künste
            </div>
        </div>

        <div class="pergament-card" data-tilt>
            <div class="card-corner top-left"></div>
            <div class="card-corner top-right"></div>
            <div class="card-corner bottom-left"></div>
            <div class="card-corner bottom-right"></div>

            <div class="card-number">@Model.Guilds.Count</div>
            <h3 class="card-title">Gilden</h3>
            <div class="card-content">
                Organisierte Bünde<br>
                für Abenteurer
            </div>
        </div>

        <div class="pergament-card" data-tilt>
            <div class="card-corner top-left"></div>
            <div class="card-corner top-right"></div>
            <div class="card-corner bottom-left"></div>
            <div class="card-corner bottom-right"></div>

            <div class="card-number">8</div>
            <h3 class="card-title">Religionen</h3>
            <div class="card-content">
                Glaubensrichtungen<br>
                des Reiches
            </div>
        </div>
    </section>

    <!-- Magieklassen Sektion mit echten Daten -->
    <section class="magic-section">
        <h2 class="section-title">
            Schulen der Magie
        </h2>

        <div class="magic-grid">
            @foreach (var magicClass in Model.MagicClasses)
            {
                    <div class="magic-card @(magicClass.Obermagie?.LightCard?.CssClass ?? "default")-hover" data-tilt>
                        <img src="@magicClass.ImagePath" class="magic-icon" alt="@magicClass.Bezeichnung" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                        <div class="magic-icon-fallback" style="display:none;">🔮</div>

                        <div class="magic-name">@magicClass.Bezeichnung</div>
                        <div class="magic-school">@(magicClass.Obermagie?.Bezeichnung ?? "Unbekannt")</div>
                    </div>
            }
        </div>
    </section>

    <!-- Gilden Sektion -->
    <section class="guild-section">
        <h2 class="section-title">
            <span class="title-decoration left">⚜</span>
            Ehrenwerte Gilden
            <span class="title-decoration right">⚜</span>
        </h2>

        <div class="guild-scroll">
            <div class="scroll-content">
                @foreach (var guild in Model.Guilds.Take(6))
                {
                        <div class="guild-banner">
                            <div class="banner-pole"></div>
                            <div class="banner-flag">
                                <img src="@guild.ImagePath" alt="@guild.Name" onerror="this.style.display='none';">
                                <div class="guild-name">@guild.Name</div>
                            </div>
                        </div>
                }
            </div>
        </div>
    </section>

    <!-- Statistiken mit Vintage-Design -->
    <section class="stats-section">
        <div class="stats-parchment">
            <div class="parchment-header">
                <h2 class="stats-title">Reichsstatistiken</h2>
            </div>

            <div class="stats-content">
                <div class="stats-grid">
                    <div class="stat-item">
                        <div class="stat-icon">⚔️</div>
                        <span class="stat-number" data-target="@(Model.GenderStats.ContainsKey("männlich") ? Model.GenderStats["männlich"] : 0)">0</span>
                        <span class="stat-label">Männliche Charaktere</span>
                    </div>

                    <div class="stat-item">
                        <div class="stat-icon">🌹</div>
                        <span class="stat-number" data-target="@(Model.GenderStats.ContainsKey("weiblich") ? Model.GenderStats["weiblich"] : 0)">0</span>
                        <span class="stat-label">Weibliche Charaktere</span>
                    </div>

                    <div class="stat-item">
                        <div class="stat-icon">🔮</div>
                        <span class="stat-number" data-target="@Model.Characters.Where(c => c.CharacterMagicClasses.Any()).Count()">0</span>
                        <span class="stat-label">Aktive Zauberer</span>
                    </div>

                    <div class="stat-item">
                        <div class="stat-icon">🏰</div>
                        <span class="stat-number" data-target="@Model.Guilds.Count">0</span>
                        <span class="stat-label">Gilden & Bünde</span>
                    </div>
                </div>

                <!-- Magiklassen-Verteilung -->
                <div class="magic-distribution">
                    <h3>Verteilung der Magieschulen</h3>
                    <div class="distribution-bars">
                        @foreach (var stat in Model.MagicClassStats.Take(5))
                        {
                                <div class="distribution-item">
                                    <span class="distribution-label">@stat.Key</span>
                                    <div class="distribution-bar">
                                        <div class="distribution-fill" style="width: @(Math.Max(5, (stat.Value * 100) / Math.Max(1, Model.MagicClassStats.Values.Max())))%"></div>
                                        <span class="distribution-value">@stat.Value</span>
                                    </div>
                                </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Neueste Charaktere -->
    <section class="recent-characters">
        <h2 class="section-title">
            <span class="title-decoration left">⚔️</span>
            Jüngst Registrierte
            <span class="title-decoration right">🛡️</span>
        </h2>

        <div class="character-scrolls">
            @foreach (var character in Model.recentCharacters.Take(6))
            {
                    <div class="character-scroll" data-tilt>
                        <div class="scroll-header">
                            <div class="character-seal">@character.Vorname.FirstOrDefault()</div>
                        </div>
                        <div class="scroll-body">
                            <h4>@character.Vorname @character.Nachname</h4>
                            <p><strong>Geschlecht:</strong> @character.Geschlecht</p>
                            <p><strong>Gilde:</strong>Gilde</p>
                            <p><strong>Religion:</strong>Religion</p>

                            @if (character.CharacterMagicClasses.Any())
                            {
                                    <div class="character-magic">
                                        <small>Magie: @string.Join(", ", character.CharacterMagicClasses.Take(2).Select(cmc => cmc.MagicClass?.Bezeichnung))</small>
                                    </div>
                            }
                        </div>
                    </div>
            }
        </div>
    </section>
</div>

@section Scripts {
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                // Animierte Zahlen für Statistiken
                const numbers = document.querySelectorAll('.stat-number');
                numbers.forEach(number => {
                    const target = parseInt(number.getAttribute('data-target'));
                    let current = 0;
                    const increment = target / 50;

                    const timer = setInterval(() => {
                        current += increment;
                        if (current >= target) {
                            number.textContent = target;
                            clearInterval(timer);
                        } else {
                            number.textContent = Math.floor(current);
                        }
                    }, 50);
                });

                // Tilt-Effekt für Karten
                document.querySelectorAll('[data-tilt]').forEach(card => {
                    card.addEventListener('mousemove', (e) => {
                        const rect = card.getBoundingClientRect();
                        const x = e.clientX - rect.left;
                        const y = e.clientY - rect.top;

                        const centerX = rect.width / 2;
                        const centerY = rect.height / 2;

                        const rotateX = (y - centerY) / 10;
                        const rotateY = (centerX - x) / 10;

                        card.style.transform = `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale3d(1.05, 1.05, 1.05)`;
                    });

                    card.addEventListener('mouseleave', () => {
                        card.style.transform = 'perspective(1000px) rotateX(0deg) rotateY(0deg) scale3d(1, 1, 1)';
                    });
                });

                // Parallax für Dekorationen
                window.addEventListener('scroll', () => {
                    const scrolled = window.pageYOffset;
                    const decorations = document.querySelectorAll('.vintage-decorations > div');

                    decorations.forEach((decoration, index) => {
                        const speed = (index % 3 + 1) * 0.1;
                        decoration.style.transform += ` translateY(${scrolled * speed}px)`;
                    });
                });

                // Schwebende Animation für Dekorationen
                document.querySelectorAll('.vintage-decorations > div').forEach((decoration, index) => {
                    decoration.style.animation = `float ${3 + index}s ease-in-out infinite`;
                    decoration.style.animationDelay = `${index * 0.5}s`;
                });
            });
        </script>
}
