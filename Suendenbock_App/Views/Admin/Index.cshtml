@using Suendenbock_App.Models.ViewModels
@model AdminViewModel
@{
    ViewData["Title"] = "Admin Dashboard";
    Layout = "~/Views/Shared/_AdminLayout.cshtml"; // Ensure this layout is set correctly
}   
    <!-- Main Content -->
<div class="admin-container">
    <div class="container-fluid py-4">
        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show">
                <strong>⚠️ Fehler:</strong> @TempData["Error"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show">
                <strong>✅ Erfolg:</strong> @TempData["Success"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        <div class="row g-4 mb-4">
            <!-- Gilden Pergament -->
            <div class="col-md-6">
                <div class="pergament-table-card">
                    <h3 class="pergament-header">Gilden</h3>
                    <table id="guildTable" class="medieval-table w-100">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Gildenmeister</th>
                                <th>Anmeldung</th>
                                <th>Rang</th>
                                <th>⚔️ Aktionen</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var guild in Model.Guilds)
                            {
                                <tr>
                                    <td>
                                        @if (!string.IsNullOrEmpty(guild.ImagePath))
                                        {
                                            <img src="@guild.ImagePath" alt="Logo" style="width: 30px; height: 30px; margin-left: 5px; border-radius: 50%;">
                                        }
                                        <strong>@guild.Name</strong>
                                    </td>

                                    <td>@(guild.LeaderCharacter?.Vorname + " " + guild.LeaderCharacter?.Nachname)</td>
                                    <td>@(guild.AnmeldungsstatusNavigation?.Name)</td>
                                    <td>@(guild.AbenteuerrangNavigation?.Name)</td>
                                    <td>
                                        <div class="medieval-actions">
                                            <a asp-controller="Guild" asp-action="Form" asp-route-id="@guild.Id"
                                               class="medieval-btn edit-btn" title="Gilde bearbeiten">
                                                ✏️
                                            </a>
                                            <button class="medieval-btn delete-btn"
                                                    onclick="deleteContent(@guild.Id, 'Guild')"
                                                    title="Gilde löschen">
                                                🗡️
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div class="pergament-table-card">
                    <h3 class="pergament-header">Infanterie</h3>
                    <table id="infanterieTable" class="medieval-table w-100">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>General</th>
                                <th>Sitz</th>
                                <th>⚔️ Aktionen</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var infanterie in Model.Infanteries)
                            {
                                <tr>
                                    <td>
                                        @if (!string.IsNullOrEmpty(infanterie.ImagePath))
                                        {
                                            <img src="@infanterie.ImagePath" alt="Logo" style="width: 30px; height: 30px; margin-left: 5px; border-radius: 50%;">
                                        }
                                        <strong>@infanterie.Bezeichnung. Infanterie</strong>
                                    </td>

                                    <td>@infanterie.LeaderCharacter?.Vorname @infanterie.LeaderCharacter?.Nachname</td>
                                    <td>@infanterie.Sitz</td>
                                    <td>
                                        <div class="medieval-actions">
                                            <a asp-controller="Infanterie" asp-action="Form" asp-route-id="@infanterie.Id"
                                               class="medieval-btn edit-btn" title="Infanterie bearbeiten">
                                                ✏️
                                            </a>
                                            <button class="medieval-btn delete-btn"
                                                    onclick="deleteContent(@infanterie.Id, 'Infanterie')"
                                                    title="Infanterie löschen">
                                                🗡️
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Charaktere Pergament -->
            <div class="col-md-6">
                <div class="pergament-table-card">
                    <h3 class="pergament-header">Charaktere</h3>
                    <table id="characterTable" class="medieval-table w-100">
                        <thead>
                            <tr>
                                <th>Vorname</th>
                                <th>Nachname</th>
                                <th>Haus</th>
                                <th>Magie</th>
                                <th>⚔️ Aktionen</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var character in Model.Characters)
                            {
                                <tr>
                                    <td><strong>@character.Vorname</strong></td>
                                    <td><strong>@character.Nachname</strong></td>
                                    <td>@character.Details?.Haus?.Name</td>
                                    <td>
                                        @if (character.CharacterMagicClasses.Any())
                                        {
                                            <div class="magic-classes">
                                                @foreach (var cmc in character.CharacterMagicClasses.Take(2))
                                                {
                                                    <span class="badge rounded-pill"
                                                          style="background: linear-gradient(45deg, #d4af37, #b8941f); color: white; margin: 1px;">
                                                        🔮 @cmc.MagicClass.Bezeichnung
                                                    </span>
                                                }
                                                @if (character.CharacterMagicClasses.Count() > 2)
                                                {
                                                    <span class="badge rounded-pill bg-secondary">+@(character.CharacterMagicClasses.Count() - 2)</span>
                                                }
                                            </div>
                                        }
                                        else
                                        {
                                            <span class="text-muted">⚫ Keine Magie</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="medieval-actions">
                                            <a asp-controller="Character" asp-action="Form" asp-route-id="@character.Id"
                                               class="medieval-btn edit-btn" title="Charakter bearbeiten">
                                                ✏️
                                            </a>
                                            <button class="medieval-btn delete-btn"
                                                    onclick="deleteContent(@character.Id, 'Character')"
                                                    title="Charakter löschen">
                                                🗡️
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="row g-3">
            <div class="col-lg-12">
                <!-- Character Grid Section -->
                <div class="card character-grid-section">
                    <div class="card-body">
                        <div class="row g-3">
                            <!-- First Row -->
                            <div class="col-4">
                                <div class="character-card" onclick="selectCharacter('Tewa', this)">
                                    <div class="character-avatar">
                                        <i class="bi bi-person-fill"></i>
                                    </div>
                                    <div class="character-name">Jewa</div>
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="character-card" onclick="selectCharacter('Salome', this)">
                                    <div class="character-avatar">
                                        <i class="bi bi-person-fill"></i>
                                    </div>
                                    <div class="character-name">Salome</div>
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="character-card" onclick="selectCharacter('Jeremias', this)">
                                    <div class="character-avatar">
                                        <i class="bi bi-person-fill"></i>
                                    </div>
                                    <div class="character-name">Jeremias</div>
                                </div>
                            </div>

                            <!-- Second Row -->
                            <div class="col-4">
                                <div class="character-card active" onclick="selectCharacter('Hiro', this)">
                                    <div class="character-avatar">
                                        <i class="bi bi-person-fill"></i>
                                    </div>
                                    <div class="character-name">Hiro</div>
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="character-card" onclick="selectCharacter('Josefine', this)">
                                    <div class="character-avatar">
                                        <i class="bi bi-person-fill"></i>
                                    </div>
                                    <div class="character-name">Josefine</div>
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="character-card" onclick="selectCharacter('aktueller Begleiter', this)">
                                    <div class="character-avatar">
                                        <i class="bi bi-person-check-fill"></i>
                                    </div>
                                    <div class="character-name">aktueller Begleiter</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
           
        </div>  
    </div>
</div>
@section Scripts {
<script>
$(document).ready(function () {
    const medievalTableConfig = {
        dom: '<"row pergament-controls mb-2"<"col-sm-12 col-md-5"l><"col-sm-12 col-md-7"f>>' +
                '<"row"<"col-sm-12"tr>>' +
                '<"row pergament-footer mt-5"<"col-sm-12 col-md-4"i><"col-sm-12 col-md-8"p>>',
        pageLength: 10,
        lengthMenu: [[5, 15, 25, -1], [5, 8, 15, 25, "Alle Einträge"]],
        language: {
            search: "🔍 Chroniken durchsuchen:",
            lengthMenu: "Zeige _MENU_ Einträge",
            info: "📜 _START_ bis _END_ von _TOTAL_ Einträgen",
            infoEmpty: "📰 Keine Einträge vorhanden",
            infoFiltered: "(🔎 gefiltert von _MAX_ Gesamteinträgen)",
            paginate: {
                first: "⏮️ Erste",
                last: "⏭️ Letzte",
                next: "▶️ Nächste",
                previous: "◀️ Vorherige"
            },
            emptyTable: "📋 Die Chroniken sind leer",
            zeroRecords: "🔍 Keine passenden Einträge in den Archiven gefunden"
        },
        columnDefs: [
            { orderable: false, targets: -1 }
        ],
        responsive: true,
        autoWidth: false,
        drawCallback: function() {
            // Füge Hover-Effekte nach dem Zeichnen hinzu
            $('.medieval-table tbody tr').hover(
                function() { $(this).addClass('table-hover'); },
                function() { $(this).removeClass('table-hover'); }
            );
        }
    };

// Guild Table
$('#guildTable').DataTable({
    ...medievalTableConfig,
    
    order: [[0, 'asc']]
});

// Infanterie Table
    let table = $('#infanterieTable').DataTable({
    ...medievalTableConfig,
    order: [[0, 'asc']]
});

// Add event listener for opening and closing details
table.on('click', 'tbody td.dt-control', function (e) {
    let tr = e.target.closest('tr');
    let row = table.row(tr);

    if (row.child.isShown()) {
        // This row is already open - close it
        row.child.hide();
    }
    else {
        // Open this row
        row.child(format(row.data())).show();
    }
});
// Character Table
$('#characterTable').DataTable({
    ...medievalTableConfig,
    order: [[1, 'asc']]
});
});
    function selectCharacter(name, element) {
        // Entferne active Klasse von allen Karten
        document.querySelectorAll('.character-card').forEach(card => {
            card.classList.remove('active');
        });

        // Füge active Klasse zur geklickten Karte hinzu
        element.classList.add('active');

        console.log(`Ausgewählter Charakter: ${name}`);

        // Bootstrap Toast Benachrichtigung (optional)
        showToast(`Charakter "${name}" ausgewählt`);
    }

    function castSpell(spellName) {
        console.log(`Zauber "${spellName}" wird gewirkt!`);
        showToast(`Zauber "${spellName}" gewirkt!`);
    }

    function showToast(message) {
        // Erstelle temporäres Toast Element
        const toastHtml = `
            <div class="toast align-items-center text-white bg-primary border-0 position-fixed top-0 end-0 m-3" style="z-index: 1051;" role="alert">
                <div class="d-flex">
                    <div class="toast-body">
                        ${message}
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                </div>
            </div>
        `;

        document.body.insertAdjacentHTML('beforeend', toastHtml);
        const toastElement = document.querySelector('.toast:last-child');
        const toast = new bootstrap.Toast(toastElement, { delay: 2000 });
        toast.show();

        // Entferne Toast nach dem Verstecken
        toastElement.addEventListener('hidden.bs.toast', () => {
            toastElement.remove();
        });
    }

    // Navigation Tab Handler
    document.addEventListener('DOMContentLoaded', function() {
                            const navLinks = document.querySelectorAll('.nav-pills .nav-link');
                            navLinks.forEach(link => {
                                link.addEventListener('click', function(e) {
                                    e.preventDefault();
                                    navLinks.forEach(l => l.classList.remove('active'));
                                    this.classList.add('active');

                                    const tabName = this.getAttribute('data-tab');
                                    showToast(`Tab "${tabName}" aktiviert`);
                                });
                            });

                            // Guild/Infantry selection handler
                            const guildOptions = document.querySelectorAll('input[name="unit"]');
                            guildOptions.forEach(option => {
                                option.addEventListener('change', function() {
                                    console.log(`Ausgewählte Einheit: ${this.value}`);
                                    showToast(`Einheit "${this.value}" ausgewählt`);
                                });
                            });

                            // Character form handlers
                            const characterInputs = document.querySelectorAll('.character-detail-card input');
                            characterInputs.forEach(input => {
                                input.addEventListener('change', function() {
                                    console.log(`${this.id}: ${this.value}`);
                                });
                            });
                        });

    function deleteContent(Id,controllerName) {
        Swal.fire({
            title: "Wollen Sie wirklich den Eintrag löschen?",
            icon: "warning",
            confirmButtonText: `Ja, löschen!`,
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: "POST",
                    url: "/" + controllerName + "/Delete",
                    data: { id: Id },
                    success: function (msg) {
                        Swal.fire("Eintrag gelöscht", "", "success").then((result) => {
                            location.reload();
                        });
                    },
                    error: function (msg) {
                        Swal.fire("Ups, irgendetwas ist schiefgelaufen!", "", "error");
                    }
                });
            }
        });
    }
</script>
}



