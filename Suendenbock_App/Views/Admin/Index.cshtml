@using Suendenbock_App.Models.ViewModels
@model AdminViewModel
@{
    ViewData["Title"] = "Admin Dashboard";
    Layout = "~/Views/Shared/_AdminLayout.cshtml"; // Ensure this layout is set correctly
}   
    <!-- Main Content -->
<div class="admin-container">
    <div class="container-fluid py-4">
        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show">
                <strong>⚠️ Fehler:</strong> @TempData["Error"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show">
                <strong>✅ Erfolg:</strong> @TempData["Success"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        <div class="row g-4 mb-4">
            <!-- Gilden Pergament -->
            <div class="col-md-6">
                <div class="pergament-table-card">
                    <h3 class="pergament-header">Gilden</h3>
                    <table id="guildTable" class="medieval-table w-100">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Gildenmeister</th>
                                <th>Anmeldung</th>
                                <th>Rang</th>
                                <th>⚔️ Aktionen</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var guild in Model.Guilds)
                            {
                                <tr>
                                    <td>
                                        @if (!string.IsNullOrEmpty(guild.ImagePath))
                                        {
                                            <img src="@guild.ImagePath" alt="Logo" style="width: 30px; height: 30px; margin-left: 5px; border-radius: 50%;">
                                        }
                                        <strong>@guild.Name</strong>
                                    </td>

                                    <td>@(guild.LeaderCharacter?.Vorname + " " + guild.LeaderCharacter?.Nachname)</td>
                                    <td>@(guild.AnmeldungsstatusNavigation?.Name)</td>
                                    <td>@(guild.AbenteuerrangNavigation?.Name)</td>
                                    <td>
                                        <div class="medieval-actions">
                                            <a asp-controller="Guild" asp-action="Form" asp-route-id="@guild.Id"
                                               class="medieval-btn edit-btn" title="Gilde bearbeiten">
                                                ✏️
                                            </a>
                                            <button class="medieval-btn delete-btn"
                                                    onclick="deleteContent(@guild.Id, 'Guild')"
                                                    title="Gilde löschen">
                                                🗡️
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div class="pergament-table-card">
                    <h3 class="pergament-header">Infanterie</h3>
                    <table id="infanterieTable" class="medieval-table w-100">
                        <thead>
                            <tr>
                                <th></th>
                                <th>Name</th>
                                <th>General</th>
                                <th>Sitz</th>
                                <th>Regimente</th>
                                <th>⚔️ Aktionen</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var infanterie in Model.Infanteries)
                            {
                                <tr data-infanterie-id="@infanterie.Id">
                                    <td class="dt-control">
                                        <i class="fas fa-plus-circle text-primary" style="cursor: pointer;"></i>
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(infanterie.ImagePath))
                                        {
                                            <img src="@infanterie.ImagePath" alt="Logo" style="width: 30px; height: 30px; margin-left: 5px; border-radius: 50%;">
                                        }
                                        <strong>@infanterie.Bezeichnung. Infanterie</strong>
                                    </td>
                                    <td>@infanterie.LeaderCharacter?.Vorname @infanterie.LeaderCharacter?.Nachname</td>
                                    <td>@infanterie.Sitz</td>
                                    <td>
                                        <span class="badge bg-info" id="regiment-count-@infanterie.Id">@infanterie.Regiments.Count 
                                            @(infanterie.Regiments.Count == 1 ? "Regiment" : "Regimente")</span>
                                    </td>
                                    <td>
                                        <div class="medieval-actions">
                                            <a asp-controller="Infanterie" asp-action="Form" asp-route-id="@infanterie.Id"
                                               class="medieval-btn edit-btn" title="Infanterie bearbeiten">
                                                ✏️
                                            </a>
                                            <button class="medieval-btn delete-btn"
                                                    onclick="deleteContent(@infanterie.Id, 'Infanterie')"
                                                    title="Infanterie löschen">
                                                🗡️
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Charaktere Pergament -->
            <div class="col-md-6">
                <div class="pergament-table-card">
                    <h3 class="pergament-header">Charaktere</h3>
                    <table id="characterTable" class="medieval-table w-100">
                        <thead>
                            <tr>
                                <th>Vorname</th>
                                <th>Nachname</th>
                                <th>Haus</th>
                                <th>Magie</th>
                                <th>⚔️ Aktionen</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var character in Model.Characters)
                            {
                                <tr>
                                    <td><strong>@character.Vorname</strong></td>
                                    <td><strong>@character.Nachname</strong></td>
                                    <td>@character.Details?.Haus?.Name</td>
                                    <td>
                                        @if (character.CharacterMagicClasses.Any())
                                        {
                                            <div class="magic-classes">
                                                @foreach (var cmc in character.CharacterMagicClasses.Take(2))
                                                {
                                                    <span class="badge rounded-pill"
                                                          style="background: linear-gradient(45deg, #d4af37, #b8941f); color: white; margin: 1px;">
                                                        🔮 @cmc.MagicClass.Bezeichnung
                                                    </span>
                                                }
                                                @if (character.CharacterMagicClasses.Count() > 2)
                                                {
                                                    <span class="badge rounded-pill bg-secondary">+@(character.CharacterMagicClasses.Count() - 2)</span>
                                                }
                                            </div>
                                        }
                                        else
                                        {
                                            <span class="text-muted">⚫ Keine Magie</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="medieval-actions">
                                            <a asp-controller="Character" asp-action="Form" asp-route-id="@character.Id"
                                               class="medieval-btn edit-btn" title="Charakter bearbeiten">
                                                ✏️
                                            </a>
                                            <button class="medieval-btn delete-btn"
                                                    onclick="deleteContent(@character.Id, 'Character')"
                                                    title="Charakter löschen">
                                                🗡️
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="row g-3">
            <div class="col-lg-12">
                <!-- Character Grid Section -->
                <div class="card character-grid-section">
                    <div class="card-body">
                        <div class="row g-3">
                            <!-- First Row -->
                            <div class="col-4">
                                <div class="character-card" onclick="selectCharacter('Tewa', this)">
                                    <div class="character-avatar">
                                        <i class="bi bi-person-fill"></i>
                                    </div>
                                    <div class="character-name">Jewa</div>
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="character-card" onclick="selectCharacter('Salome', this)">
                                    <div class="character-avatar">
                                        <i class="bi bi-person-fill"></i>
                                    </div>
                                    <div class="character-name">Salome</div>
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="character-card" onclick="selectCharacter('Jeremias', this)">
                                    <div class="character-avatar">
                                        <i class="bi bi-person-fill"></i>
                                    </div>
                                    <div class="character-name">Jeremias</div>
                                </div>
                            </div>

                            <!-- Second Row -->
                            <div class="col-4">
                                <div class="character-card active" onclick="selectCharacter('Hiro', this)">
                                    <div class="character-avatar">
                                        <i class="bi bi-person-fill"></i>
                                    </div>
                                    <div class="character-name">Hiro</div>
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="character-card" onclick="selectCharacter('Josefine', this)">
                                    <div class="character-avatar">
                                        <i class="bi bi-person-fill"></i>
                                    </div>
                                    <div class="character-name">Josefine</div>
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="character-card" onclick="selectCharacter('aktueller Begleiter', this)">
                                    <div class="character-avatar">
                                        <i class="bi bi-person-check-fill"></i>
                                    </div>
                                    <div class="character-name">aktueller Begleiter</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
           
        </div>  
    </div>
</div>
@section Scripts {
    <script>
        $(document).ready(function () {
            const medievalTableConfig = {
                dom: '<"row pergament-controls mb-2"<"col-sm-12 col-md-5"l><"col-sm-12 col-md-7"f>>' +
                        '<"row"<"col-sm-12"tr>>' +
                        '<"row pergament-footer mt-5"<"col-sm-12 col-md-4"i><"col-sm-12 col-md-8"p>>',
                pageLength: 10,
                lengthMenu: [[5, 15, 25, -1], [5, 8, 15, 25, "Alle Einträge"]],
                language: {
                    search: "🔍 Chroniken durchsuchen:",
                    lengthMenu: "Zeige _MENU_ Einträge",
                    info: "📜 _START_ bis _END_ von _TOTAL_ Einträgen",
                    infoEmpty: "📰 Keine Einträge vorhanden",
                    infoFiltered: "(🔎 gefiltert von _MAX_ Gesamteinträgen)",
                    paginate: {
                        first: "⏮️ Erste",
                        last: "⏭️ Letzte",
                        next: "▶️ Nächste",
                        previous: "◀️ Vorherige"
                    },
                    emptyTable: "📋 Die Chroniken sind leer",
                    zeroRecords: "🔍 Keine passenden Einträge in den Archiven gefunden"
                },
                columnDefs: [
                    { orderable: false, targets: -1 }
                ],
                responsive: true,
                autoWidth: false
            };

            // Guild Table
            $('#guildTable').DataTable({
                ...medievalTableConfig,
                order: [[0, 'asc']]
            });

            // Infanterie Table mit Details
            let infanterieTable = $('#infanterieTable').DataTable({
                ...medievalTableConfig,
                order: [[1, 'asc']], // Sortierung angepasst
                columnDefs: [
                    { orderable: false, targets: [0, -1] }, // Erste und letzte Spalte nicht sortierbar
                    { className: "dt-control", targets: 0 }  // Details-Kontrolle
                ]
            });

            // Event Listener für Details öffnen/schließen
            $('#infanterieTable tbody').on('click', 'td.dt-control', function () {
                var tr = $(this).closest('tr');
                var row = infanterieTable.row(tr);
                var icon = $(this).find('i');

                if (row.child.isShown()) {
                    // Details schließen
                    row.child.hide();
                    icon.removeClass('fa-minus-circle').addClass('fa-plus-circle');
                    tr.removeClass('shown');
                } else {
                    // Details öffnen - AJAX Call
                    var infanterieId = getInfanterieIdFromRow(tr);
                    var infanterieName = tr.find('td:eq(1) strong').text();

                    // Loading anzeigen
                    row.child('<div class="text-center p-3"><i class="fas fa-spinner fa-spin"></i> Lade Regimente...</div>').show();
                    icon.removeClass('fa-plus-circle').addClass('fa-minus-circle');
                    tr.addClass('shown');

                    // AJAX Call zur API
                    loadRegimentsForInfanterie(infanterieId, infanterieName, row);
                }
            });

            // Funktion um Infanterie ID aus der Tabellenzeile zu extrahieren
            function getInfanterieIdFromRow(tr) {
                // Du musst die Infanterie ID irgendwo in der Zeile verstecken
                // Option 1: Als data-Attribut
                return tr.data('infanterie-id');

                // Option 2: Falls nicht vorhanden, über die Reihenfolge ermitteln
                // return tr.index() + 1; // Nur wenn IDs 1,2,3... sind
            }

            // AJAX Funktion zum Laden der Regimente
            function loadRegimentsForInfanterie(infanterieId, infanterieName, row) {
                $.ajax({
                    url: `/api/infanterie/${infanterieId}/regiments`,
                    type: 'GET',
                    success: function(regiments) {
                        var detailsHtml = formatRegimentsDetails(regiments, infanterieName);
                        row.child(detailsHtml).show();
                    },
                    error: function(xhr, status, error) {
                        console.error('Fehler beim Laden der Regimente:', error);
                        row.child('<div class="alert alert-danger m-3">Fehler beim Laden der Regimente</div>').show();
                    }
                });
            }

            // Funktion zum Formatieren der Regiment-Details
            function formatRegimentsDetails(regiments, infanterieName) {
                if (!regiments || regiments.length === 0) {
                    return '<div class="alert alert-info m-3">Keine Regimente zugeordnet</div>';
                }

                var detailsHtml = '<div class="p-3">';
                detailsHtml += '<h5 class="text-primary mb-3">🏛️ Regimente der ' + infanterieName + '</h5>';
                detailsHtml += '<div class="row">';

                regiments.forEach(function(regiment) {
                    detailsHtml += '<div class="col-md-6 mb-3">';
                    detailsHtml += '<div class="card border-secondary">';
                    detailsHtml += '<div class="card-header bg-secondary text-white">';
                    detailsHtml += '<h6 class="mb-0">🎖️ ' + regiment.name + '</h6>';
                    detailsHtml += '</div>';
                    detailsHtml += '<div class="card-body">';
                    detailsHtml += '<p class="mb-1"><strong>Regimentsleiter:</strong> ' +
                                  (regiment.regimentsCharacter ?
                                   regiment.regimentsCharacter.vorname + ' ' + regiment.regimentsCharacter.nachname :
                                   'Nicht zugewiesen') + '</p>';
                    detailsHtml += '<p class="mb-1"><strong>Adjutant:</strong> ' +
                                  (regiment.adjutantCharacter ?
                                   regiment.adjutantCharacter.vorname + ' ' + regiment.adjutantCharacter.nachname :
                                   'Nicht zugewiesen') + '</p>';
                    detailsHtml += '<p class="mb-0"><small class="text-muted">' + regiment.description + '</small></p>';
                    detailsHtml += '</div>';
                    detailsHtml += '</div>';
                    detailsHtml += '</div>';
                });

                detailsHtml += '</div></div>';
                return detailsHtml;
            }

            // Character Table
            $('#characterTable').DataTable({
                ...medievalTableConfig,
                order: [[1, 'asc']]
            });

    // Restliche Funktionen bleiben gleich...
    function selectCharacter(name, element) {
        document.querySelectorAll('.character-card').forEach(card => {
            card.classList.remove('active');
        });
        element.classList.add('active');
        console.log(`Ausgewählter Charakter: ${name}`);
        showToast(`Charakter "${name}" ausgewählt`);
    }

    function showToast(message) {
        const toastHtml = `
            <div class="toast align-items-center text-white bg-primary border-0 position-fixed top-0 end-0 m-3" style="z-index: 1051;" role="alert">
                <div class="d-flex">
                    <div class="toast-body">${message}</div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                </div>
            </div>
        `;
        document.body.insertAdjacentHTML('beforeend', toastHtml);
        const toastElement = document.querySelector('.toast:last-child');
        const toast = new bootstrap.Toast(toastElement, { delay: 2000 });
        toast.show();
        toastElement.addEventListener('hidden.bs.toast', () => {
            toastElement.remove();
        });
    }
});

function deleteContent(Id, controllerName) {
    Swal.fire({
        title: "Wollen Sie wirklich den Eintrag löschen?",
        icon: "warning",
        confirmButtonText: `Ja, löschen!`,
    }).then((result) => {
        if (result.isConfirmed) {
            $.ajax({
                type: "POST",
                url: "/" + controllerName + "/Delete",
                data: { id: Id },
                success: function (msg) {
                    Swal.fire("Eintrag gelöscht", "", "success").then((result) => {
                        location.reload();
                    });
                },
                error: function (msg) {
                    Swal.fire("Ups, irgendetwas ist schiefgelaufen!", "", "error");
                }
            });
        }
    });
}
</script>
}



